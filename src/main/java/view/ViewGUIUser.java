package view;

import Controller.UserController;
import DTO.UsuarioDTO;
import Excepciones.EmailException;
import Excepciones.FechaException;
import Excepciones.NameException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import model.Usuario;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Juan Zuluaga
 */
public class ViewGUIUser extends javax.swing.JFrame {

    /**
     * Creates new form ViewGUIUser
     */
    private UserController controllerUser = new UserController();
    ArrayList<Usuario> usuariosList;
    ArrayList<UsuarioDTO> usuariosList2;

    public ViewGUIUser() {
        initComponents();
        //Obtrener usuairo desde el controlador
        usuariosList = controllerUser.usuariosList;
        usuariosList2 = controllerUser.usuariosList2;
        controllerUser.mostrarUsuarios(jTableUsers);
    }

    private void resetearCampos() {
        jTIdUser.setText("");
        jTNombreUser.setText("");
        jTApellidoUser.setText("");
        jTDireccionUser.setText("");
        jTEmailUser.setText("");
        jTCelularUser.setText("");
        jTFechaIngreso.setText("");
        jTSueldo.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTIdUser = new javax.swing.JTextField();
        jCTipoUsuario = new javax.swing.JComboBox<>();
        jTNombreUser = new javax.swing.JTextField();
        jTApellidoUser = new javax.swing.JTextField();
        jTDireccionUser = new javax.swing.JTextField();
        jTEmailUser = new javax.swing.JTextField();
        jTCelularUser = new javax.swing.JTextField();
        jBtnUpdate = new javax.swing.JButton();
        jBtnCrear = new javax.swing.JButton();
        jBtnDelete = new javax.swing.JButton();
        jBOrdenar = new javax.swing.JButton();
        jBVolverAlMenu = new javax.swing.JButton();
        jBQS = new javax.swing.JButton();
        jBMS = new javax.swing.JButton();
        jBOrdenarBurbuja = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTFechaIngreso = new javax.swing.JTextField();
        jTSueldo = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUsers = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Usuario"));

        jLabel1.setText("ID");

        jLabel2.setText("TIPO");

        jLabel3.setText("NOMBRE");

        jLabel4.setText("APELLIDO");

        jLabel5.setText("DIRECCION");

        jLabel6.setText("EMAIL");

        jLabel7.setText("CELULAR");

        jTIdUser.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTIdUserFocusLost(evt);
            }
        });
        jTIdUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTIdUserActionPerformed(evt);
            }
        });

        jCTipoUsuario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrador", "Bodeguero", "Vendedor" }));
        jCTipoUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCTipoUsuarioActionPerformed(evt);
            }
        });

        jTNombreUser.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTNombreUserFocusLost(evt);
            }
        });
        jTNombreUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTNombreUserActionPerformed(evt);
            }
        });

        jTApellidoUser.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTApellidoUserFocusLost(evt);
            }
        });

        jTEmailUser.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTEmailUserFocusLost(evt);
            }
        });

        jTCelularUser.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTCelularUserFocusLost(evt);
            }
        });

        jBtnUpdate.setText("ACTUALIZAR");
        jBtnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnUpdateActionPerformed(evt);
            }
        });

        jBtnCrear.setText("CREAR");
        jBtnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCrearActionPerformed(evt);
            }
        });

        jBtnDelete.setText("BORRAR");
        jBtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnDeleteActionPerformed(evt);
            }
        });

        jBOrdenar.setText("ORDENAR");
        jBOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBOrdenarActionPerformed(evt);
            }
        });

        jBVolverAlMenu.setText("VOLVER AL MENU");
        jBVolverAlMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVolverAlMenuActionPerformed(evt);
            }
        });

        jBQS.setText("ORDENAR QS");
        jBQS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBQSActionPerformed(evt);
            }
        });

        jBMS.setText("MERGE SORT");
        jBMS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBMSActionPerformed(evt);
            }
        });

        jBOrdenarBurbuja.setText("ORDENAR BURBUJA");
        jBOrdenarBurbuja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBOrdenarBurbujaActionPerformed(evt);
            }
        });

        jLabel8.setText("FECHA INGRESO");

        jLabel9.setText("SUELDO");

        jTFechaIngreso.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFechaIngresoFocusLost(evt);
            }
        });

        jTSueldo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTSueldoFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBOrdenarBurbuja)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jBQS)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBMS))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jBOrdenar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBVolverAlMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jBtnCrear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnDelete)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jCTipoUsuario, javax.swing.GroupLayout.Alignment.TRAILING, 0, 203, Short.MAX_VALUE)
                                .addComponent(jTNombreUser, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jTApellidoUser, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jTIdUser))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTCelularUser, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTEmailUser, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTDireccionUser, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTSueldo)
                            .addComponent(jTFechaIngreso))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTIdUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jCTipoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTNombreUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTApellidoUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTDireccionUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTEmailUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTCelularUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTFechaIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTSueldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnCrear)
                    .addComponent(jBtnUpdate)
                    .addComponent(jBtnDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBOrdenar)
                    .addComponent(jBVolverAlMenu))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBMS)
                    .addComponent(jBQS))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBOrdenarBurbuja)
                .addGap(14, 14, 14))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Lista de usuarios"));

        jTableUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableUsers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableUsersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableUsers);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 691, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTIdUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTIdUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTIdUserActionPerformed


    private void jCTipoUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCTipoUsuarioActionPerformed
        // TODO add your handling code here:
        String tipoUserSelected = (String) jCTipoUsuario.getSelectedItem();
        int pos = jCTipoUsuario.getSelectedIndex();

        System.out.println("Texto seleccionado: " + tipoUserSelected);
        System.out.println("Posicion seleccionado: " + pos);


    }//GEN-LAST:event_jCTipoUsuarioActionPerformed

    private void jBtnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCrearActionPerformed
        // TODO add your handling code here:
        int idUser = Integer.parseInt(jTIdUser.getText());
        String tipoUserSelected = (String) jCTipoUsuario.getSelectedItem();
        String nombre = jTNombreUser.getText();
        String apellido = jTApellidoUser.getText();
        String direccion = jTDireccionUser.getText();
        String cellphone = jTCelularUser.getText();
        String email = jTEmailUser.getText();
        String chocorramin = jTFechaIngreso.getText();
        float sueldo = Float.parseFloat(jTSueldo.getText());

        UsuarioDTO user = new UsuarioDTO(idUser, tipoUserSelected, nombre, apellido, direccion, cellphone, email, chocorramin, sueldo);

//        UserController controllerUser = new UserController();
        boolean exito = controllerUser.insertar(user);

        if (exito) {
            resetearCampos();
            JOptionPane.showMessageDialog(this, "Usuario registrado con exito");
            controllerUser.mostrarUsuarios(jTableUsers);
        } else {
            JOptionPane.showMessageDialog(this, "Error al agregar el usuario");
        }

    }//GEN-LAST:event_jBtnCrearActionPerformed

    private void jTableUsersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableUsersMouseClicked
        // TODO add your handling code here:
        int selectedRow = jTableUsers.getSelectedRow();
        if (selectedRow >= 0) {
            Object idUsuario = jTableUsers.getValueAt(selectedRow, jTableUsers.getColumn("id").getModelIndex());
//            Object nameUsuario = jTableUsers.getValueAt(selectedRow, jTableUsers.getColumn("nombre").getModelIndex());
            if (idUsuario != null) {
                int idUsuarioInt = Integer.parseInt(idUsuario.toString());
//                String nombreUsuario = nameUsuario.toString();

//                UserController controllerUser = new UserController();
                UsuarioDTO updateUser = controllerUser.searchByIdUsuario(idUsuarioInt);

                if (updateUser != null) {
                    jTIdUser.setText(String.valueOf(updateUser.getId()));
                    jCTipoUsuario.setSelectedItem(updateUser.getTipoUSer());
                    jTNombreUser.setText(updateUser.getNombre());
                    jTApellidoUser.setText(updateUser.getApellido());
                    jTDireccionUser.setText(updateUser.getDireccion());
                    jTCelularUser.setText(updateUser.getCellphone());
                    jTEmailUser.setText(updateUser.getEmail());
                    jTFechaIngreso.setText(updateUser.getFecha_ingreso());
                    jTSueldo.setText(String.valueOf(updateUser.getSueldo()));
                    jTIdUser.setEnabled(false);
                } else {
                    JOptionPane.showMessageDialog(this, "No se pudieron cargar los datos");
                }
            }
        }
    }//GEN-LAST:event_jTableUsersMouseClicked

    private void jBtnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnUpdateActionPerformed
        // TODO add your handling code here:
        int idUsuario = Integer.parseInt(jTIdUser.getText());
        String tipoUserSelected = (String) jCTipoUsuario.getSelectedItem();
        String nombre = jTNombreUser.getText();
        String apellido = jTApellidoUser.getText();
        String direccion = jTDireccionUser.getText();
        String cellphone = jTCelularUser.getText();
        String email = jTEmailUser.getText();
        String fecha_ingreso = jTFechaIngreso.getText();
        float sueldo = Float.parseFloat(jTSueldo.getText());

        UsuarioDTO user = new UsuarioDTO(idUsuario, tipoUserSelected, nombre, apellido, direccion, cellphone, email, fecha_ingreso, sueldo);

//        UserController controlleUser = new UserController();
        boolean updateSuccess = controllerUser.updateUser(user);

        if (updateSuccess) {
            resetearCampos();
            jTIdUser.setEnabled(true);
            controllerUser.mostrarUsuarios(jTableUsers);
            JOptionPane.showMessageDialog(this, "Usuario actualizado con exito");
        } else {
            JOptionPane.showMessageDialog(this, "Error al actualizar el usuario");
        }
    }//GEN-LAST:event_jBtnUpdateActionPerformed

    private void jBtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnDeleteActionPerformed
        // TODO add your handling code here:
        int idUsuario = Integer.parseInt(jTIdUser.getText());
//        UserController controllerUser = new UserController();
        UsuarioDTO usuarioAEliminar = new UsuarioDTO();
        usuarioAEliminar.setId(idUsuario);
        boolean eliminado = controllerUser.borrar(usuarioAEliminar);

        if (eliminado) {
            resetearCampos();
            jTIdUser.setEnabled(true);
            controllerUser.mostrarUsuarios(jTableUsers);
            JOptionPane.showMessageDialog(this, "Usuario eliminado");
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo eliminar correctamente el usuario");
        }
    }//GEN-LAST:event_jBtnDeleteActionPerformed

    private void jBOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBOrdenarActionPerformed
        // TODO add your handling code here:
//        UserController controllerUser = new UserController();
        resetearCampos();
        jTIdUser.setEnabled(true);
        controllerUser.mostrarUsuarios(jTableUsers);
    }//GEN-LAST:event_jBOrdenarActionPerformed

    private void jBVolverAlMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBVolverAlMenuActionPerformed
        // TODO add your handling code here:
        MenuGUI menu = new MenuGUI();
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jBVolverAlMenuActionPerformed

    private void jBQSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBQSActionPerformed
        // TODO add your handling code here:
        controllerUser.ordenar(0, usuariosList2.size() - 1, usuariosList2, jTableUsers);
        JOptionPane.showMessageDialog(this, "Ordeamineto por quicSort exitoso(Apellido)");
    }//GEN-LAST:event_jBQSActionPerformed

    private void jBMSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBMSActionPerformed
        // TODO add your handling code here:
        controllerUser.ordenar(0, usuariosList2.size() - 1, jTableUsers);
        JOptionPane.showMessageDialog(this, "Ordeamineto por MergeSort");
    }//GEN-LAST:event_jBMSActionPerformed

    private void jBOrdenarBurbujaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBOrdenarBurbujaActionPerformed
        // TODO add your handling code here:
        controllerUser.ordenarBurbuja(jTableUsers);
        JOptionPane.showMessageDialog(this, "Ordeamineto por burbuja (TipoUsuario)");
    }//GEN-LAST:event_jBOrdenarBurbujaActionPerformed

    private void jTEmailUserFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTEmailUserFocusLost
        // TODO add your handling code here:
        EmailException emailException = new EmailException();
        try {
            String email = jTEmailUser.getText();
            emailException.verificarEmail(email);
        } catch (EmailException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            jTEmailUser.requestFocus();
        }
    }//GEN-LAST:event_jTEmailUserFocusLost

    private void jTFechaIngresoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFechaIngresoFocusLost
        // TODO add your handling code here:
        FechaException fechaException = new FechaException();
        try {
            String date = jTFechaIngreso.getText();
            fechaException.verificarDate(date);
        } catch (FechaException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            jTFechaIngreso.requestFocus();
        }
    }//GEN-LAST:event_jTFechaIngresoFocusLost

    private void jTNombreUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTNombreUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTNombreUserActionPerformed

    private void jTNombreUserFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTNombreUserFocusLost
        // TODO add your handling code here:
        NameException nameException = new NameException();
        try {
            String nameUser = jTNombreUser.getText();
            nameException.verificarName(nameUser);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            jTNombreUser.requestFocus();
        }
    }//GEN-LAST:event_jTNombreUserFocusLost

    private void jTApellidoUserFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTApellidoUserFocusLost
        // TODO add your handling code here:
        NameException nameException = new NameException();
        try {
            String apellidoUser = jTApellidoUser.getText();
            nameException.verificarName(apellidoUser);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            jTApellidoUser.requestFocus();
        }
    }//GEN-LAST:event_jTApellidoUserFocusLost

    private void jTIdUserFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTIdUserFocusLost
        // TODO add your handling code here:

        try {
            String idUser = jTIdUser.getText();
            int id = Integer.parseInt(idUser);

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El valor del Identificador no es un número válido");
            // Puedes agregar más código aquí según tus necesidades, como volver a enfocar el campo, etc.
            jTIdUser.requestFocus();
            jTIdUser.setText("0");
        }
    }//GEN-LAST:event_jTIdUserFocusLost

    private void jTCelularUserFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTCelularUserFocusLost
        // TODO add your handling code here:
        try {
            String celUser = jTCelularUser.getText();
            int cel = Integer.parseInt(celUser);

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El valor del telefono no es un número válido");
            // Puedes agregar más código aquí según tus necesidades, como volver a enfocar el campo, etc.
            jTCelularUser.requestFocus();
            jTCelularUser.setText("0");
        }
    }//GEN-LAST:event_jTCelularUserFocusLost

    private void jTSueldoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTSueldoFocusLost
        // TODO add your handling code here:
        try {
            String sueldoUser = jTSueldo.getText();
            int sueldo = Integer.parseInt(sueldoUser);

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El valor del Identificador no es un número válido");
            // Puedes agregar más código aquí según tus necesidades, como volver a enfocar el campo, etc.
            jTSueldo.requestFocus();
            jTSueldo.setText("0");
        }
    }//GEN-LAST:event_jTSueldoFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewGUIUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewGUIUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewGUIUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewGUIUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewGUIUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBMS;
    private javax.swing.JButton jBOrdenar;
    private javax.swing.JButton jBOrdenarBurbuja;
    private javax.swing.JButton jBQS;
    private javax.swing.JButton jBVolverAlMenu;
    private javax.swing.JButton jBtnCrear;
    private javax.swing.JButton jBtnDelete;
    private javax.swing.JButton jBtnUpdate;
    private javax.swing.JComboBox<String> jCTipoUsuario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTApellidoUser;
    private javax.swing.JTextField jTCelularUser;
    private javax.swing.JTextField jTDireccionUser;
    private javax.swing.JTextField jTEmailUser;
    private javax.swing.JTextField jTFechaIngreso;
    private javax.swing.JTextField jTIdUser;
    private javax.swing.JTextField jTNombreUser;
    private javax.swing.JTextField jTSueldo;
    private javax.swing.JTable jTableUsers;
    // End of variables declaration//GEN-END:variables
}
